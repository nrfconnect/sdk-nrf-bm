#
# Copyright (c) 2025 Nordic Semiconductor
#
# SPDX-License-Identifier: LicenseRef-Nordic-5-Clause
#

menuconfig PEER_MANAGER
	bool "Peer Manager"
	depends on SOFTDEVICE
	depends on NRF_SDH
	depends on BLE_CONN_STATE
	depends on BM_TIMER
	depends on BM_ZMS
	select EXPERIMENTAL
	help
	  Peer Manager library.

if PEER_MANAGER

config PM_BM_ZMS_SECTOR_SIZE
	int "BM_ZMS sector size"
	default 1024

config PM_BLE_OBSERVER_PRIO
	int "BLE events priority"
	default 1
	help
	  Priority with which BLE events are dispatched to the Peer Manager module.

config PM_MAX_REGISTRANTS
	int "Maximum number of event handlers that can be registered"
	default 3

config PM_FLASH_BUFFERS
	int "Number of internal buffers for non-volatile storage operations"
	default 4
	help
	  Decrease this value to reduce RAM usage.

config PM_SERVICE_CHANGED
	bool "Service changed management for GATT server"
	default y
	help
	  Disable this option to reduce memory usage if not using a GATT server, or using a server
	  without a service changed characteristic.

config PM_PEER_RANKS
	bool "Peer rank management"
	default y
	help
	  Disable this option to reduce memory usage if not using the peer rank API.

config PM_LESC
	bool "LE Secure Connections (LESC) support"
	depends on PSA_WANT_ALG_ECDH
	depends on PSA_WANT_GENERATE_RANDOM
	depends on PSA_WANT_KEY_TYPE_ECC_KEY_PAIR_GENERATE
	depends on PSA_WANT_KEY_TYPE_ECC_KEY_PAIR_IMPORT
	depends on PSA_WANT_KEY_TYPE_ECC_KEY_PAIR_EXPORT
	depends on PSA_WANT_ECC_SECP_R1_256
	depends on (MBEDTLS_PSA_STATIC_KEY_SLOTS && MBEDTLS_PSA_KEY_SLOT_COUNT >= 1) || \
		   MBEDTLS_ENABLE_HEAP

	help
	  If enabled, you need to call nrf_ble_lesc_request_handler() in the main loop to
	  respond to LESC-related BLE events. If LESC support is not required, disable this option
	  to reduce memory usage.

if PM_LESC

config PM_LESC_GENERATE_NEW_KEYS
	bool "Generate new LESC key pair after every pairing attempt"
	help
	  New LESC keys are generated on the auth status event.

config PM_LESC_PRIVATE_KEY_EXPORT
	bool "Export private key for debugging purposes"
	help
	  Export private key.
	  This is for for debugging purposes only and is not to be used in production!

endif # PM_LESC

config PM_RA_PROTECTION
	bool "Protection against repeated pairing attempts"
	help
	  Enable protection against repeated Bluetooth pairing attempts from the same device.
	  Offending peers will be temporarily blacklisted with increasing backoff times to
	  prevent pairing spam or brute-force attacks.

if PM_RA_PROTECTION

config PM_RA_PROTECTION_TRACKED_PEERS_NUM
	int "Maximum number of peers whose authorization status can be tracked"
	default 8

config PM_RA_PROTECTION_MIN_WAIT_INTERVAL
	int "Minimum waiting interval (in ms) before a new pairing attempt can be initiated"
	default 4000

config PM_RA_PROTECTION_MAX_WAIT_INTERVAL
	int "Maximum waiting interval (in ms) before a new pairing attempt can be initiated"
	default 64000

config PM_RA_PROTECTION_REWARD_PERIOD
	int "Reward period (in ms)"
	default 10000
	help
	  The waiting interval is gradually decreased when no new failed pairing attempts are made
	  during reward period.

endif # PM_RA_PROTECTION

config PM_HANDLER_SEC_DELAY_MS
	int "Delay before starting security"
	default 0
	help
	  This might be necessary for interoperability reasons, especially as peripheral.

module=PEER_MANAGER
module-str=Peer Manager
source "${ZEPHYR_BASE}/subsys/logging/Kconfig.template.log_config"

endif # PEER_MANAGER
